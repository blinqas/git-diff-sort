name: Release New Version

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install semantic-release
      run: npm install semantic-release@latest

    - name: Configure Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@example.com"

    - name: Create Release and Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

    - name: Smartly Update Major Version Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Fetch all tags and branches from the remote repository
        git fetch --all --tags
    
        # Get the latest major version tag (e.g., v1, v2, v3)
        latest_major_tag=$(git ls-remote --tags origin 'refs/tags/v[0-9]*' | awk -F/ '{print $3}' | sort -V | tail -n 1)
    
        # Extract the major version number from the latest major version tag
        major_version=$(echo $latest_major_tag | grep -o 'v[0-9]*' | sed 's/v//')
    
        # Delete the existing major version tag if it exists
        if git show-ref --tags --quiet --verify -- "refs/tags/v$major_version"; then
          git tag -d "v$major_version"
          git push --delete origin "v$major_version"
        fi
    
        # Create a new major version tag pointing to the current main branch
        git checkout main
        git pull origin main
        git tag -a "v$major_version" -m "Updated v$major_version based on main"
        git push --tags

